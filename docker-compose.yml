version: "3.8"

services:
  db:
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - django_network

  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - django_network

  web:
    build: .
    container_name: web
    command: >
      sh -c " python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - rabbitmq
    env_file:
      - .env
    networks:
      - django_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - django_network
      - celery_rabbit

  celery:
    build: .
    command: celery -A real_time_chat worker --loglevel=info --without-mingle
    container_name: celery
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - rabbitmq
    env_file:
      - .env
    networks:
      - celery_rabbit

volumes:
  postgres_data:

networks:
  django_network:
  celery_rabbit:
